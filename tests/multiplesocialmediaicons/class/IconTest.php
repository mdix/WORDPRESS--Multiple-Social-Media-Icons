<?php

require_once dirname(__FILE__) . '/../../../class/Icon.php';

/**
 * Test class for Icon.
 * Generated by PHPUnit on 2012-03-29 at 10:21:22.
 */
class IconTest extends PHPUnit_Framework_TestCase {
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    public function testPositionOffsetIsCorrectlySetPerImage() {
        $iconSize = 32;
        
        $iconNames = array('youtube', 'wordpress', 'vimeo', 'twitter', 'twitpic', 
            'stumbleupon', 'spotify', 'rss', 'playstation', 'lastfm', 'flickr', 
            'facebook', 'digg', 'delicious', 'tumblr', 'piano', 'linkedin', 'myspace', 
            'socialvibe', 'technorati', 'deviantart', 'blogger', 'behance', 'livejournal', 
            'megavideo', 'reddit', 'designfloat', 'audioboo', 'ember', 'skype', 
            'friendfeed', 'hyves', 'yahoo', 'bebo', 'typepad', 'xing', 'grooveshark', 
            'creativecommons', 'steam', 'dailybooth', 'lockerz', 'google', 'email', 
            'wakoopa', 'soundcloud', 'playfire', 'gowalla', 'forrst', 'dribbble', 
            'dopplr', 'buzz');
        
        foreach ($iconNames as $key => $iconName) {
            $icon = new Icon($iconName, $iconSize);
            $this->assertEquals(-bcmul($iconSize, $key), $icon->getLeftOffset(), 'Failed at icon ' . $key . ' (' . $iconName . ')');
        }
    }
    
    public function testFalseIconNameReturnsMinusOne() {
        $icon = new Icon('falseName', 32);
        $this->assertEquals(-1, $icon->getLeftOffset());
    }
    
    public function testGetMarkup() {
        $iconSize = 32;
        
        $icon = new Icon('twitter', $iconSize);
        $this->assertEquals('<div style="width:'.$iconSize.'px;height:'.$iconSize.'px;background-image:###SPRITE###;background-position:'.$icon->getLeftOffset().'px 0;"><a style="display:block;width:'.$iconSize.'px;height:'.$iconSize.'px;" href="#" title="Follow me on twitter" target="_blank"></a></div>', $icon->getMarkup());
    }
    
    public function testGetMarkupWithCustomValues() {
        $iconSize = 32;
        $customLink = 'http://www.dixpix.de';
        $customTitle = 'This is my custom title';
        
        $icon = new Icon('stumbleupon', $iconSize);
        $icon->setCustomIconLink($customLink);
        $icon->setCustomIconTitle($customTitle);
        $this->assertEquals('<div style="width:'.$iconSize.'px;height:'.$iconSize.'px;background-image:###SPRITE###;background-position:'.$icon->getLeftOffset().'px 0;"><a style="display:block;width:'.$iconSize.'px;height:'.$iconSize.'px;" href="'.$customLink.'" title="'.$customTitle.'" target="_blank"></a></div>', $icon->getMarkup());
    }
}

?>
